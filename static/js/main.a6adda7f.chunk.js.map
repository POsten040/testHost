{"version":3,"sources":["components/Header.js","components/ReusableForm.js","components/NewSodaForm.js","components/SodaDetail.js","components/Soda.js","components/SodaInventory.js","components/EditSodaForm.js","components/SodaControl.js","components/App.js","index.js"],"names":["Header","style","width","size","fontFamily","fontSize","color","id","className","ReusableForm","props","soda","Fragment","onSubmit","formSubmissionHandler","type","name","defaultValue","names","slogan","sugarType","price","quantity","buttonText","placeholder","NewSodaForm","event","preventDefault","onNewSodaCreation","target","value","parseInt","moneyMade","v4","SodaDetail","show","pageVisible","onClick","editButtonClick","deleteButtonClick","buttonText1","buyButtonClick","salePrice","buttonStateFunc","buttonState","prototypes","PropTypes","object","string","func","Soda","sodaSelected","SodaInventory","mainSodaInventory","map","SodaSelected","key","EditSodaForm","onEditSoda","SodaControl","handleButtonClick","state","selectedSoda","setState","formVisibleOnPage","editButtonPressed","prevState","handleManageButtonClick","handleBuySoda","newMasterSodaInventory","masterSodaInventory","filter","concat","handleSelectedSoda","newSelectedSoda","handleNewSodaCreation","handlePriceThing","int","handleEditSodaCreation","handleEditButton","handleHomeButton","handleBuyerButtonClick","handleDeleteButton","currentlyVisibleState","this","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6adda7f.chunk.js","sourcesContent":["import React from \"react\";\r\n// import pepsiSpace from \"./../img/pepsiSpace.png\"\r\n\r\n\r\nfunction Header() {\r\n  const headerStyle = {\r\n    width: '100%',\r\n    size: '400',\r\n    fontFamily: 'spaceFont',\r\n    fontSize: 60,\r\n    color: 'yellow'\r\n  }\r\n  const imgStyle = {\r\n    width: '50%',\r\n    size: '400',\r\n    fontFamily: 'spaceFont',\r\n    fontSize: 60,\r\n    color: 'yellow'\r\n  }\r\n  const headerColor = {\r\n    color: 'red'\r\n  }\r\n\r\n  return (\r\n    <div style={headerStyle}>\r\n      <div id=\"space\">\r\n        <div className=\"stars\"></div>\r\n        <div className=\"stars\"></div>\r\n        <div className=\"stars\"></div>\r\n        <div className=\"stars\"></div>\r\n        <div className=\"stars\"> </div>\r\n\r\n      </div>\r\n\r\n\r\n      <div className=\"row\">\r\n        {/* <div className=\"column\"><img style={imgStyle} src={pepsiSpace} alt=\"pepsi in space\" /> */}\r\n          <div className=\"column\"> <span className=\"header1\"> The International</span> <span className=\"header2\">Pepsi Station </span></div>\r\n          </div>\r\n        </div>\r\n      // </div>\r\n  );\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport PropTypes from \"prop-types\"\r\n\r\n\r\nexport default function ReusableForm(props) {\r\n  if (props.soda) {\r\n    return (\r\n      <React.Fragment>\r\n        <form onSubmit={props.formSubmissionHandler}>\r\n          <input type='text' name='name' defaultValue={props.soda.names} />\r\n          <input type='number' name='slogan' defaultValue={props.soda.slogan} />\r\n          <input type='text' name='sugarType' defaultValue={props.soda.sugarType} />\r\n          <input type='number' name='price' defaultValue={props.soda.price} />\r\n          <input type='number' name='quantity' defaultValue={props.soda.quantity} />\r\n          <button type='submit'>{props.buttonText}</button>\r\n        </form>\r\n      </React.Fragment>\r\n    )\r\n  } else {\r\n    return (\r\n      <React.Fragment>\r\n        <form onSubmit={props.formSubmissionHandler}>\r\n          <input type='text' name='name' placeholder='Name' />\r\n          <input type='number' name='slogan' placeholder='Heat Level' />\r\n          <input type='text' name='sugarType' placeholder='sugarType' />\r\n          {/* <input type='text' name='sugarType' placeholder='sugarType' /> */}\r\n          <input type='number' name='price' placeholder='Price' />\r\n          <input type='number' name='quantity' placeholder='Quantity' />\r\n          <button type='submit'>{props.buttonText}</button>\r\n        </form>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nReusableForm.propTypes = {\r\n  soda: PropTypes.object,\r\n  formSubmissionHandler: PropTypes.func,\r\n  buttonText: PropTypes.string\r\n}\r\n","\r\nimport React from 'react';\r\nimport { v4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport ReusableForm from \"./ReusableForm\";\r\n\r\nexport default function NewSodaForm(props) {\r\n\r\n  function handleNewSodaFormSubmission(event) {\r\n    event.preventDefault();\r\n    props.onNewSodaCreation({ name: event.target.name.value, slogan: parseInt(event.target.slogan.value), sugarType: event.target.sugarType.value, price: parseInt(event.target.price.value), quantity: parseInt(event.target.quantity.value), moneyMade: 0, id: v4() })\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ReusableForm formSubmissionHandler={handleNewSodaFormSubmission} buttonText=\"Add the Soda\" />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nNewSodaForm.propTypes = {\r\n  onNewSodaCreation: PropTypes.func\r\n};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction SodaDetail(props) {\r\n\r\n  function handleBuy(event) {\r\n\r\n    event.preventDefault();\r\n    props.buyButtonClick({\r\n      name: props.soda.names, slogan: props.soda.slogan, sugarType: props.soda.sugarType,\r\n      price: props.soda.price, quantity: props.soda.quantity - event.target.quantity.value,\r\n      moneyMade: props.soda.moneyMade + (event.target.quantity.value * props.soda.price), salePrice: \"+\" + event.target.quantity.value * props.soda.price, id: props.soda.id\r\n    })\r\n    props.buttonStateFunc(event.target.quantity.value * props.soda.price)\r\n  }\r\n\r\n  let show = null;\r\n\r\n  if (props.pageVisible === \"manage\") {\r\n    show = <div>\r\n      <p><button onClick={props.editButtonClick}>{props.buttonText}</button></p>\r\n      <p><button onClick={() => props.deleteButtonClick(props.soda.id)}>{props.buttonText1}</button></p>\r\n    </div>\r\n  } else {\r\n    show = <div>\r\n      <form onSubmit={handleBuy}>\r\n        Quanity you want:\r\n        <input type='number' name='quantity' placeholder='Quanity'></input>\r\n        <button type='submit'>{props.buttonText}</button>\r\n      </form>\r\n    </div>\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"sodalist\" >\r\n        <div className=\"row\">\r\n          <div className=\"column\">\r\n            <h2>{props.soda.names}</h2>\r\n            <p><em>{props.soda.slogan}</em>  </p>\r\n            <p>Sugar Type: {props.soda.sugarType}</p>\r\n            <p>Price: {props.soda.price}</p>\r\n            <p>Quantity: {props.soda.quantity}</p>\r\n            <p>Money Made: ${props.soda.moneyMade}</p>\r\n            {props.buttonState}\r\n          </div>\r\n          <div className=\"column\">\r\n            {show}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </React.Fragment >\r\n  );\r\n\r\n}\r\n\r\nSodaDetail.prototypes = {\r\n  soda: PropTypes.object,\r\n  buttonText: PropTypes.string,\r\n  editButtonClick: PropTypes.func,\r\n  deleteButtonClick: PropTypes.func,\r\n  buttonText1: PropTypes.string,\r\n  buyButtonClick: PropTypes.func,\r\n  pageVisible: PropTypes.string,\r\n  buttonStateFunc: PropTypes.func,\r\n  buttonState: PropTypes.string\r\n}\r\n\r\nexport default SodaDetail;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Soda(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <div onClick={() => props.sodaSelected(props.id)}>\r\n        <h2>{props.names}</h2>\r\n        <p><em>{props.slogan}</em></p>\r\n        <p>Sweetner: {props.sugarType}</p>\r\n        <p>Price: ${props.price}</p>\r\n        <p>Quantity Available: {props.quantity}</p>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nSoda.propTypes = { // lower camel case because its a property here\r\n  name: PropTypes.string.isRequired,\r\n  slogan: PropTypes.number, // upper camel case because its reffering to the library\r\n  sugarType: PropTypes.string,\r\n  price: PropTypes.number,\r\n  quantity: PropTypes.number.isRequired,\r\n  SodaSelected: PropTypes.func\r\n};\r\n\r\nexport default Soda;","import React from 'react';\r\nimport Soda from \"./Soda\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction SodaInventory(props) {\r\n  return (\r\n    <React.Fragment>\r\n      {\r\n        props.mainSodaInventory.map((soda) =>\r\n          <Soda\r\n            sodaSelected={props.SodaSelected}\r\n            name={soda.names}\r\n            slogan={soda.slogan}\r\n            sugarType={soda.sugarType}\r\n            price={soda.price}\r\n            quantity={soda.quantity}\r\n            id={soda.id}\r\n            key={soda.id} />\r\n        )\r\n      }\r\n\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nSodaInventory.propTypes = {\r\n  mainsodaInventory: PropTypes.array,\r\n  sodaSelected: PropTypes.func\r\n}\r\n\r\nexport default SodaInventory","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ReusableForm from './ReusableForm'\r\n\r\n\r\n\r\nfunction EditSodaForm(props) {\r\n  const { soda } = props\r\n  function handleEditSodaFormSubmission(event) {\r\n    event.preventDefault();\r\n    props.onEditSoda({ names: event.target.name.value, slogan: parseInt(event.target.slogan.value), sugarType: event.target.sugarType.value, price: parseInt(event.target.price.value), quantity: parseInt(event.target.quantity.value), moneyMade: soda.moneyMade, id: soda.id })\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"sodalist\">\r\n        <b>{soda.names}'s Ticket</b>\r\n        <p> <em>sugarType:</em> {soda.sugarType} </p>\r\n        <li>Heat Level: {soda.slogan}</li>\r\n        <li>Price: {soda.price}</li>\r\n        <li>Quantity: {soda.quantity}</li>\r\n        <ReusableForm\r\n          soda={soda}\r\n          formSubmissionHandler={handleEditSodaFormSubmission}\r\n          buttonText=\"Update Soda\" />\r\n      </div>\r\n    </React.Fragment >\r\n  )\r\n}\r\n\r\nEditSodaForm.propTypes = {\r\n  soda: PropTypes.object,\r\n  onEditSoda: PropTypes.func\r\n}\r\n\r\nexport default EditSodaForm","import React from 'react';\r\nimport NewSodaForm from './NewSodaForm';\r\nimport SodaDetail from './SodaDetail';\r\nimport SodaInventory from './SodaInventory';\r\nimport EditSodaForm from './EditSodaForm';\r\n\r\n\r\nclass SodaControl extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      formVisibleOnPage: false,\r\n      masterSodaInventory: [\r\n        {\r\n          name: \"Pepsi Cola\",\r\n          slogan: \"That's What I Like\",\r\n          sugarType: \"Corn Syrup\",\r\n          price: 100,\r\n          quantity: 100,\r\n          moneyMade: 0,\r\n          id: 1\r\n        }\r\n      ],\r\n      selectedSoda: null,\r\n      editButtonPressed: false,\r\n      pageVisible: \"home\",\r\n      buttonState: null\r\n    };\r\n  }\r\n\r\n  handleButtonClick = () => {\r\n    if (this.state.selectedSoda != null) {\r\n      this.setState({\r\n        formVisibleOnPage: false,\r\n        selectedSoda: null,\r\n        editButtonPressed: false\r\n      })\r\n    } else {\r\n      this.setState(prevState => (\r\n        { formVisibleOnPage: !prevState.formVisibleOnPage }));\r\n    }\r\n  }\r\n  handleManageButtonClick = () => {\r\n    this.setState({\r\n      pageVisible: \"manage\"\r\n    })\r\n  }\r\n\r\n  handleBuySoda = (Soda) => {\r\n    const newMasterSodaInventory = this.state.masterSodaInventory.filter(Soda => Soda.id !== this.state.selectedSoda.id).concat(Soda)\r\n    this.setState({\r\n      masterSodaInventory: newMasterSodaInventory,\r\n      selectedSoda: Soda\r\n    })\r\n  }\r\n  handleSelectedSoda = (id) => {\r\n    const newSelectedSoda = this.state.masterSodaInventory.filter(Soda => Soda.id === id)[0]\r\n    this.setState({ selectedSoda: newSelectedSoda })\r\n  }\r\n\r\n  handleNewSodaCreation = (Soda) => {\r\n    const newMasterSodaInventory = this.state.masterSodaInventory.concat(Soda);\r\n    this.setState({\r\n      masterSodaInventory: newMasterSodaInventory,\r\n      formVisibleOnPage: false\r\n    })\r\n  }\r\n\r\n  handlePriceThing = (int) => {\r\n    this.setState({\r\n      buttonState: <div className=\"saleprice\">+${int}</div>\r\n    })\r\n  }\r\n\r\n\r\n  handleEditSodaCreation = (Soda) => {\r\n    const newMasterSodaInventory = this.state.masterSodaInventory.filter(Soda => Soda.id !== this.state.selectedSoda.id).concat(Soda)\r\n    this.setState({\r\n      masterSodaInventory: newMasterSodaInventory,\r\n      // formVisibleOnPage: false,\r\n      editButtonPressed: false,\r\n      selectedSoda: Soda\r\n    })\r\n\r\n  }\r\n  handleEditButton = () => {\r\n    this.setState({ editButtonPressed: true })\r\n  }\r\n\r\n  handleHomeButton = () => {\r\n    this.setState({\r\n      pageVisible: \"home\",\r\n      selectedSoda: null,\r\n      editButtonPressed: false,\r\n      formVisibleOnPage: false\r\n    })\r\n  }\r\n\r\n  handleBuyerButtonClick = () => {\r\n    this.setState({ pageVisible: \"customer\" })\r\n  }\r\n\r\n  handleDeleteButton = (id) => {\r\n    const newMasterSodaInventory = this.state.masterSodaInventory.filter(Soda => Soda.id !== id);\r\n    this.setState({\r\n      formVisibleOnPage: false,\r\n      masterSodaInventory: newMasterSodaInventory,\r\n      selectedSoda: null\r\n    })\r\n\r\n  }\r\n\r\n  render() {\r\n    let currentlyVisibleState = null;\r\n    let buttonText = null;\r\n    if (this.state.pageVisible === \"manage\") {\r\n      if (this.state.editButtonPressed) {\r\n        currentlyVisibleState = <EditSodaForm onEditSoda={this.handleEditSodaCreation} soda={this.state.selectedSoda} />\r\n        buttonText = \"Return to Soda Inventory\";\r\n      }\r\n      else if (this.state.formVisibleOnPage) {\r\n        currentlyVisibleState = <NewSodaForm onNewSodaCreation={this.handleNewSodaCreation} />;\r\n        buttonText = \"Return to Soda Inventory\";\r\n      } else if (this.state.selectedSoda != null) {\r\n        currentlyVisibleState = <SodaDetail soda={this.state.selectedSoda} pageVisible={this.state.pageVisible} editButtonClick={this.handleEditButton} deleteButtonClick={this.handleDeleteButton} buttonText=\"Edit Soda\" buttonText1=\"Delete Soda\" />\r\n        buttonText = \"Return to Soda Inventory\";\r\n      }\r\n      else {\r\n        currentlyVisibleState = <SodaInventory mainSodaInventory={this.state.masterSodaInventory} SodaSelected={this.handleSelectedSoda} />\r\n        buttonText = \"Add Soda to Inventory\";\r\n      }\r\n\r\n      return (\r\n        <React.Fragment>\r\n          {currentlyVisibleState}\r\n          <p><button onClick={this.handleButtonClick}>{buttonText}</button></p>\r\n          <p><button onClick={this.handleHomeButton}>Go back Home</button></p>\r\n        </React.Fragment>\r\n      )\r\n    }\r\n\r\n    else if (this.state.pageVisible === \"customer\") {\r\n      if (this.state.selectedSoda != null) {\r\n        currentlyVisibleState = <SodaDetail buttonState={this.state.buttonState} buttonStateFunc={this.handlePriceThing} soda={this.state.selectedSoda} buyButtonClick={this.handleBuySoda} pageVisible={this.state.pageVisible} buttonText=\"Sell Soda\" />\r\n        buttonText = \"Return to Soda Inventory\";\r\n      }\r\n      else {\r\n        currentlyVisibleState = <SodaInventory mainSodaInventory={this.state.masterSodaInventory} SodaSelected={this.handleSelectedSoda} />\r\n        buttonText = \"Add Soda to Inventory\";\r\n      }\r\n      return (\r\n        <React.Fragment>\r\n          {currentlyVisibleState}\r\n          <p> <button onClick={this.handleHomeButton}>Go back Home</button></p>\r\n        </React.Fragment>\r\n      )\r\n\r\n    }\r\n\r\n\r\n\r\n    else {\r\n      return (\r\n        <React.Fragment>\r\n          <p>Please Select <b> Manage </b>Sodas or <b> Sell </b>Sodas</p>\r\n          <button onClick={this.handleManageButtonClick}>Manager Page</button>\r\n          <button onClick={this.handleBuyerButtonClick}>Buyer Page</button>\r\n        </React.Fragment>\r\n      )\r\n\r\n\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default SodaControl;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport SodaControl from \"./SodaControl\";\r\n\r\n\r\nfunction App(){\r\n  return (\r\n    <React.Fragment>\r\n      <Header />\r\n      <h1><SodaControl/></h1>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}